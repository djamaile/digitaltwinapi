// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using digitalTwinApi.Models;

namespace digitalTwinApi.Migrations
{
    [DbContext(typeof(DigitalTwinContext))]
    [Migration("20190620122927_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("digitalTwinApi.Models.Sensor", b =>
                {
                    b.Property<string>("HardwareId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DataType");

                    b.Property<string>("MachineNaam");

                    b.HasKey("HardwareId");

                    b.ToTable("Sensors");
                });

            modelBuilder.Entity("digitalTwinApi.Models.SensorData", b =>
                {
                    b.Property<DateTime>("TimeStamp");

                    b.Property<string>("SensorHardwareId");

                    b.Property<string>("SimulationKey");

                    b.Property<string>("Value");

                    b.HasKey("TimeStamp");

                    b.HasIndex("SensorHardwareId");

                    b.HasIndex("SimulationKey");

                    b.ToTable("SensorDatas");
                });

            modelBuilder.Entity("digitalTwinApi.Models.Simulation", b =>
                {
                    b.Property<string>("Key")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Bovenwaarde");

                    b.Property<string>("Datum")
                        .IsRequired();

                    b.Property<string>("KlantId");

                    b.Property<int>("Onderwaarde");

                    b.Property<string>("ProductieStraat");

                    b.HasKey("Key");

                    b.ToTable("Simulations");
                });

            modelBuilder.Entity("digitalTwinApi.Models.SensorData", b =>
                {
                    b.HasOne("digitalTwinApi.Models.Sensor", "Sensor")
                        .WithMany("SensorDatas")
                        .HasForeignKey("SensorHardwareId");

                    b.HasOne("digitalTwinApi.Models.Simulation", "Simulation")
                        .WithMany()
                        .HasForeignKey("SimulationKey");
                });
#pragma warning restore 612, 618
        }
    }
}
